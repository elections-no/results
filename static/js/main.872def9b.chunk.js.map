{"version":3,"sources":["Norway.js","App.js","serviceWorker.js","index.js"],"names":["Norway","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","countiesCollection","municipalitiesCollection","counties","municipalities","handleCountyClick","bind","assertThisInitialized","handleClick","showCountyTooltip","hideCountyTooltip","_this$props","props","width","height","geoMercator","fitSize","bbox","x","y","selection","node","getBBox","countyIndex","key","makeId","d3","classed","event","setClickHandled","was_selected","isCountySelected","deselectAllCounties","zoomOut","getCounty","selectCounty","_this$getBoundingBox","getBoundingBox","zoomIn","makeViewBoxString","onClick","getCountyNumber","view","attr","_this$props2","properties","ID_1","NAME_1","id","d","i","nodes","setState","feature","objects","NOR_adm1","NOR_adm2","features","kind","enumerator","isClickHandled","resetClickHandled","box","point","getBoundingBoxCenter","parentRect","ReactDOM","findDOMNode","getBoundingClientRect","scrollTop","document","documentElement","body","scrollLeft","transition","duration","style","_this$getAbsoluteBoun","getAbsoluteBoundingBoxCenter","html","getCountyName","onMouseOver","onMouseOut","_this2","_this$props3","react_default","a","createElement","viewBox","e","className","map","concat","geoPath","projection","React","Component","ElectionTypes","election_types","res","message","console","log","status","fetch","then","response","ok","handleError","json","data","getElectionTypes","item","name","ElectionEvents","election_events","_this4","getElectionEvents","Elections","elections","_this6","getElections","election_event","election_type","BarChart","svg","drawChart","innerHTML","selectAll","enter","append","App","map_data","map_width","map_height","countyNumber","handleMouseOver","text","handleMouseOut","src_Norway","App_BarChart","App_ElectionTypes","App_ElectionEvents","App_Elections","Boolean","window","location","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.872def9b.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as d3 from \"d3\";\nimport { geoMercator, geoPath } from \"d3-geo\";\nimport { feature } from \"topojson-client\";\nimport counties from \"./json/norway-counties.json\";\nimport municipalities from \"./json/norway-municipalities.json\";\n\nclass Norway extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      countiesCollection: [],\n      municipalitiesCollection: [],\n      counties: [],\n      municipalities: []\n    };\n\n    this.handleCountyClick = this.handleCountyClick.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.showCountyTooltip = this.showCountyTooltip.bind(this);\n    this.hideCountyTooltip = this.hideCountyTooltip.bind(this);\n  }\n  projection() {\n    const { width, height } = this.props;\n    return geoMercator().fitSize([width, height], this.state.countiesCollection);\n  }\n\n  getBoundingBoxCenter(bbox) {\n    return [bbox.x + bbox.width / 2, bbox.y + bbox.height / 2];\n  }\n\n  getBoundingBox(selection) {\n    const element = selection.node();\n    return element.getBBox();\n  }\n\n  makeViewBoxString(x, y, width, height) {\n    return \"\" + x + \" \" + y + \" \" + width + \" \" + height;\n  }\n\n  isCountySelected(countyIndex) {\n    const key = \"#\" + this.makeId(\"county\", countyIndex);\n    const selection = d3.select(key);\n    return selection.classed(\"active\");\n  }\n\n  getCounty(countyIndex) {\n    const key = \"#\" + this.makeId(\"county\", countyIndex);\n    return d3.select(key);\n  }\n\n  selectCounty(selection) {\n    selection.classed(\"active\", true);\n  }\n\n  handleCountyClick(countyIndex, event) {\n    this.setClickHandled();\n\n    const was_selected = this.isCountySelected(countyIndex);\n    this.deselectAllCounties();\n\n    if (!was_selected) {\n      const selection = this.getCounty(countyIndex);\n      this.selectCounty(selection);\n      const { x, y, width, height } = this.getBoundingBox(selection);\n      this.zoomIn(this.makeViewBoxString(x, y, width, height));\n    } else {\n      this.zoomOut();\n    }\n\n    const { onClick } = this.props;\n    onClick(event, this.getCountyNumber(countyIndex));\n  }\n\n  zoomIn(view) {\n    d3.select(\"svg\").attr(\"viewBox\", view);\n  }\n\n  zoomOut() {\n    const { width, height } = this.props;\n    let view = this.makeViewBoxString(0, 0, width, height);\n    d3.select(\"svg\").attr(\"viewBox\", view);\n  }\n\n  getCountyNumber(countyIndex) {\n    return this.state.counties[countyIndex].properties.ID_1;\n  }\n\n  getCountyName(countyIndex) {\n    return this.state.counties[countyIndex].properties.NAME_1;\n  }\n\n  setClickHandled() {\n    d3.select(\"#\" + this.props.id).classed(\"clicked\", true);\n  }\n\n  resetClickHandled() {\n    d3.select(\"#\" + this.props.id).classed(\"clicked\", false);\n  }\n\n  isClickHandled() {\n    return d3.select(\"#\" + this.props.id).classed(\"clicked\");\n  }\n\n  deselectAllCounties() {\n    d3.selectAll(\"path\").classed(\"active\", (d, i, nodes) => {\n      const node = d3.select(nodes[i]);\n      node.classed(\"active\", false);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      countiesCollection: feature(counties, counties.objects.NOR_adm1),\n      municipalitiesCollection: feature(municipalities, municipalities.objects.NOR_adm2),\n      counties: feature(counties, counties.objects.NOR_adm1).features,\n      municipalities: feature(municipalities, municipalities.objects.NOR_adm2).features\n    });\n  }\n\n  makeId(kind, enumerator) {\n    const { id } = this.props;\n    return \"\" + id + \"-\" + kind + \"-\" + enumerator;\n  }\n\n  handleClick(event) {\n    if (this.isClickHandled()) {\n      this.resetClickHandled();\n    } else {\n      this.deselectAllCounties();\n      this.zoomOut();\n    }\n  }\n\n  getAbsoluteBoundingBoxCenter(countyIndex) {\n    const selection = this.getCounty(countyIndex);\n    const box = this.getBoundingBox(selection);\n    const point = this.getBoundingBoxCenter(box);\n\n    const parentRect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n\n    var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n    var scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n\n    return {\n      x: parentRect.x + point[0] + scrollLeft,\n      y: parentRect.y + point[1] + scrollTop\n    };\n  }\n\n  showCountyTooltip(countyIndex, event) {\n    d3.select(\".tooltip\")\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 0.9);\n\n    const { x, y } = this.getAbsoluteBoundingBoxCenter(countyIndex);\n\n    d3.select(\".tooltip\")\n      .html(this.getCountyName(countyIndex))\n      .style(\"left\", x + \"px\")\n      .style(\"top\", y + \"px\");\n\n    // Propagate event\n    const { onMouseOver } = this.props;\n    onMouseOver(event, this.getCountyName(countyIndex));\n  }\n\n  hideCountyTooltip(countyIndex, event) {\n    d3.select(\".tooltip\")\n      .transition()\n      .duration(500)\n      .style(\"opacity\", 0);\n\n    // Propagate event\n    const { onMouseOut } = this.props;\n    onMouseOut(event);\n  }\n\n  render() {\n    const { id, width, height } = this.props;\n    return (\n      <div>\n        <svg id={id} width={width} height={height} viewBox={\"0 0 \" + width + \" \" + height} onClick={e => this.handleClick(e)}>\n          <g className=\"counties\">\n            {this.state.counties.map((d, i) => (\n              <path\n                id={this.makeId(\"county\", i)}\n                key={`county-${i}`}\n                d={geoPath().projection(this.projection())(d)}\n                className=\"county\"\n                onClick={e => this.handleCountyClick(i, e)}\n                onMouseOver={e => this.showCountyTooltip(i, e)}\n                onMouseOut={e => this.hideCountyTooltip(i, e)}\n              />\n            ))}\n          </g>\n          <g className=\"municipalities\">\n            {this.state.municipalities.map((d, i) => (\n              <path key={`municipality-${i}`} d={geoPath().projection(this.projection())(d)} className=\"municipality\" />\n            ))}\n          </g>\n        </svg>\n        <div className=\"tooltip\" />\n      </div>\n    );\n  }\n}\n\nexport default Norway;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport * as d3 from \"d3\";\nimport Norway from \"./Norway\";\n\nclass ElectionTypes extends React.Component {\n  state = {\n    election_types: []\n  };\n\n  handleError(res, message) {\n    console.log(\"ERROR (\" + res.status + \"): \" + message);\n  }\n\n  getElectionTypes() {\n    fetch(\"https://sleepy-retreat-45150.herokuapp.com/api/election_types\")\n      .then(response => {\n        if (!response.ok) {\n          this.handleError(response, \"Failed to get election types\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ election_types: data.election_types });\n      });\n  }\n\n  componentDidMount() {\n    this.getElectionTypes();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.election_types.map(function(item) {\n          return <li key={item.id}>{item.name}</li>;\n        })}\n      </ul>\n    );\n  }\n}\n\nclass ElectionEvents extends React.Component {\n  state = {\n    election_events: []\n  };\n\n  handleError(res, message) {\n    console.log(\"ERROR (\" + res.status + \"): \" + message);\n  }\n\n  getElectionEvents() {\n    fetch(\"https://sleepy-retreat-45150.herokuapp.com/api/election_events\")\n      .then(response => {\n        if (!response.ok) {\n          this.handleError(response, \"Failed to get election events\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ election_events: data.election_events });\n      });\n  }\n\n  componentDidMount() {\n    this.getElectionEvents();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.election_events.map(function(item) {\n          return <li key={item.id}>{item.name}</li>;\n        })}\n      </ul>\n    );\n  }\n}\n\nclass Elections extends React.Component {\n  state = {\n    elections: []\n  };\n\n  handleError(res, message) {\n    console.log(\"ERROR (\" + res.status + \"): \" + message);\n  }\n\n  getElections() {\n    fetch(\"https://sleepy-retreat-45150.herokuapp.com/api/elections\")\n      .then(response => {\n        if (!response.ok) {\n          this.handleError(response, \"Failed to get elections\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ elections: data.elections });\n      });\n  }\n\n  componentDidMount() {\n    this.getElections();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.elections.map(function(item) {\n          return (\n            <li key={item.id}>\n              {item.election_event} {item.election_type}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nclass BarChart extends React.Component {\n  componentDidMount() {\n    this.svg = ReactDOM.findDOMNode(this);\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    const { width, height } = this.props;\n    if (width !== 0 && height !== 0) {\n      this.drawChart();\n    }\n  }\n\n  drawChart() {\n    const { data, height } = this.props;\n\n    this.svg.innerHTML = \"\";\n\n    const svg = d3.select(this.svg);\n\n    svg\n      .selectAll(\"rect\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (d, i) => i * 90) // space between columns\n      .attr(\"y\", (d, i) => height - 10 * d)\n      .attr(\"width\", 65)\n      .attr(\"height\", (d, i) => d * 10)\n      .attr(\"fill\", \"gray\");\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return <svg width={width} height={height} />;\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    data: [12, 5, 6, 6, 9, 10],\n    map_data: [12, 5, 6, 6, 9, 10],\n    width: 700,\n    height: 200,\n    map_width: 800,\n    map_height: 450\n  };\n\n  handleClick = (e, countyNumber) => {\n    console.log(\"Click happened :\", countyNumber);\n  };\n\n  handleMouseOver = (e, text) => {\n    console.log(\"MouseOver happened :\", text);\n  };\n\n  handleMouseOut = e => {\n    console.log(\"MouseOut happened\");\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Election Results for 2019</p>\n          <Norway\n            id=\"simple\"\n            width={2 * this.state.map_width}\n            height={2 * this.state.map_height}\n            onClick={this.handleClick}\n            onMouseOver={this.handleMouseOver}\n            onMouseOut={this.handleMouseOut}\n          />\n          <BarChart data={this.state.data} width={this.state.width} height={this.state.height} />\n          <ElectionTypes />\n          <ElectionEvents />\n          <Elections />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}