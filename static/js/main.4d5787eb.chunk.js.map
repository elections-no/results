{"version":3,"sources":["Norway.js","App.js","serviceWorker.js","index.js"],"names":["Norway","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCountyClick","countyIndex","event","setClickHandled","was_selected","isCountySelected","deselectAllCounties","zoomOut","selection","getCounty","selectCounty","_this$getBoundingBox","getBoundingBox","x","y","width","height","zoomIn","makeViewBoxString","onClick","props","getCountyNumber","getCountyName","handleClick","isClickHandled","resetClickHandled","showCountyTooltip","fadeInTooltip","_this$getCountyCenter","getCountyCenter","text","positionTooltip","onMouseOver","hideCountyTooltip","hideTooltip","console","log","handleMunicipalityClick","municipalityIndex","getMunicipalityName","getMunicipalityNumber","showMunicipalityTooltip","_this$getMunicipality","getMunicipalityCenter","hideMunicipalityTooltip","state","countiesCollection","municipalitiesCollection","counties","municipalities","_this$props","geoMercator","fitSize","bbox","node","getBBox","join","properties","ID_1","NAME_1","key","makeId","d3","classed","d","i","nodes","id","view","svg","getSVG","attr","selectAll","style","_this$props2","setState","feature","objects","NOR_adm1","NOR_adm2","features","kind","enumerator","box","point","getBoundingBoxCenter","parentRect","ReactDOM","findDOMNode","getBoundingClientRect","scrollTop","document","documentElement","body","scrollLeft","getCenter","transition","duration","html","onMouseOut","getMunicipality","NAME_2","_this2","_this$props3","react_default","a","createElement","viewBox","e","className","map","concat","geoPath","projection","React","Component","ElectionTypes","election_types","res","message","status","fetch","then","response","ok","handleError","json","data","getElectionTypes","item","name","ElectionEvents","election_events","_this4","getElectionEvents","Elections","elections","_this6","getElections","election_event","election_type","BarChart","drawChart","innerHTML","enter","append","App","map_data","map_width","map_height","countyNumber","sectionName","handleMouseOver","handleMouseOut","src_Norway","App_BarChart","App_ElectionTypes","App_ElectionEvents","App_Elections","Boolean","window","location","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d5787eb.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as d3 from \"d3\";\nimport { geoMercator, geoPath } from \"d3-geo\";\nimport { feature } from \"topojson-client\";\nimport counties from \"./json/norway-counties.json\";\nimport municipalities from \"./json/norway-municipalities.json\";\n\nclass Norway extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      countiesCollection: [],\n      municipalitiesCollection: [],\n      counties: [],\n      municipalities: []\n    };\n  }\n\n  projection() {\n    const { width, height } = this.props;\n    return geoMercator().fitSize([width, height], this.state.countiesCollection);\n  }\n\n  getBoundingBoxCenter(bbox) {\n    return [bbox.x + bbox.width / 2, bbox.y + bbox.height / 2];\n  }\n\n  getBoundingBox(selection) {\n    const element = selection.node();\n    return element.getBBox();\n  }\n\n  makeViewBoxString(x, y, width, height) {\n    return [x, y, width, height].join(\" \");\n  }\n\n  getCountyNumber(countyIndex) {\n    return this.state.counties[countyIndex].properties.ID_1;\n  }\n\n  getCountyName(countyIndex) {\n    return this.state.counties[countyIndex].properties.NAME_1;\n  }\n\n  isCountySelected(countyIndex) {\n    const key = \"#\" + this.makeId(\"county\", countyIndex);\n    const selection = d3.select(key);\n    return selection.classed(\"active\");\n  }\n\n  getCounty(countyIndex) {\n    const key = \"#\" + this.makeId(\"county\", countyIndex);\n    return d3.select(key);\n  }\n\n  selectCounty(selection) {\n    selection.classed(\"active\", true);\n  }\n\n  handleCountyClick = (countyIndex, event) => {\n    this.setClickHandled();\n\n    const was_selected = this.isCountySelected(countyIndex);\n    this.deselectAllCounties();\n\n    if (!was_selected) {\n      const selection = this.getCounty(countyIndex);\n      this.selectCounty(selection);\n      const { x, y, width, height } = this.getBoundingBox(selection);\n      this.zoomIn(this.makeViewBoxString(x, y, width, height));\n    } else {\n      this.zoomOut();\n    }\n\n    const { onClick } = this.props;\n    onClick(event, this.getCountyNumber(countyIndex), this.getCountyName(countyIndex));\n  }\n\n  deselectAllCounties() {\n    d3.selectAll(\"path\").classed(\"active\", (d, i, nodes) => {\n      const node = d3.select(nodes[i]);\n      node.classed(\"active\", false);\n    });\n  }\n  \n  getSVG() {\n    return d3.select(\"#\" + this.props.id);\n  }\n\n  zoomIn(view) {\n    const svg = this.getSVG();\n    svg.classed(\"zoomed\", true);\n    svg.attr(\"viewBox\", view);\n    svg.selectAll(\".municipality\").style(\"pointer-events\", \"all\");\n    svg.selectAll(\".county\").style(\"pointer-events\", \"none\");\n  }\n\n  zoomOut() {\n    const { width, height } = this.props;\n    let view = this.makeViewBoxString(0, 0, width, height);\n    const svg = this.getSVG();\n    svg.classed(\"zoomed\", false);\n    svg.attr(\"viewBox\", view);\n    svg.selectAll(\".municipality\").style(\"pointer-events\", \"none\");\n    svg.selectAll(\".county\").style(\"pointer-events\", \"all\");\n  }\n\n  setClickHandled() {\n    this.getSVG().classed(\"clicked\", true);\n  }\n\n  resetClickHandled() {\n    this.getSVG().classed(\"clicked\", false);\n  }\n\n  isClickHandled() {\n    return this.getSVG().classed(\"clicked\");\n  }\n\n  componentDidMount() {\n    this.setState({\n      countiesCollection: feature(counties, counties.objects.NOR_adm1),\n      municipalitiesCollection: feature(municipalities, municipalities.objects.NOR_adm2),\n      counties: feature(counties, counties.objects.NOR_adm1).features,\n      municipalities: feature(municipalities, municipalities.objects.NOR_adm2).features\n    });\n  }\n\n  makeId(kind, enumerator) {\n    const { id } = this.props;\n    return \"\" + id + \"-\" + kind + \"-\" + enumerator;\n  }\n\n  handleClick = (event) => {\n    if (this.isClickHandled()) {\n      this.resetClickHandled();\n    } else {\n      this.deselectAllCounties();\n      this.zoomOut();\n    }\n  }\n\n  getCenter(selection) {\n    const box = this.getBoundingBox(selection);\n    const point = this.getBoundingBoxCenter(box);\n\n    const parentRect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n\n    var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n    var scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n\n    return {\n      x: parentRect.x + point[0] + scrollLeft,\n      y: parentRect.y + point[1] + scrollTop\n    };\n  }\n\n  getCountyCenter(countyIndex) {\n    const selection = this.getCounty(countyIndex);\n    return this.getCenter(selection);\n  }\n\n  fadeInTooltip() {\n    d3.select(\".tooltip\")\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 0.9);\n  }\n\n  positionTooltip(text, x, y) {\n    d3.select(\".tooltip\")\n      .html(text)\n      .style(\"left\", x + \"px\")\n      .style(\"top\", y + \"px\");\n  }\n\n  showCountyTooltip = (countyIndex, event) => {\n    this.fadeInTooltip();\n\n    const { x, y } = this.getCountyCenter(countyIndex);\n    const text = this.getCountyName(countyIndex);\n\n    this.positionTooltip(text, x, y);\n\n    // Propagate event\n    const { onMouseOver } = this.props;\n    onMouseOver(event, this.getCountyName(countyIndex));\n  }\n\n  hideTooltip(event) {\n    d3.select(\".tooltip\")\n      .transition()\n      .duration(500)\n      .style(\"opacity\", 0);\n    // Propagate event\n    const { onMouseOut } = this.props;\n    onMouseOut(event);\n  }\n\n  hideCountyTooltip = (countyIndex, event) => {\n    this.hideTooltip(event);\n    console.log(\"Hide Tooltip : \" + this.getCountyName(countyIndex));\n  }\n\n  /**\n   *  Municipality\n   */\n  getMunicipalityCenter(municipalityIndex) {\n    const selection = this.getMunicipality(municipalityIndex);\n    return this.getCenter(selection);\n  }\n\n  getMunicipality(municipalityIndex) {\n    const key = \"#\" + this.makeId(\"municipality\", municipalityIndex);\n    return d3.select(key);\n  }\n\n  getMunicipalityNumber(municipalityIndex) {\n    return this.state.municipalities[municipalityIndex].properties.ID_1;\n  }\n\n  getMunicipalityName(municipalityIndex) {\n    return this.state.municipalities[municipalityIndex].properties.NAME_2;\n  }\n\n  handleMunicipalityClick = (municipalityIndex, event) => {\n    console.log(\"Clicked : \" + this.getMunicipalityName(municipalityIndex));\n\n    const { onClick } = this.props;\n    onClick(event, this.getMunicipalityNumber(municipalityIndex), this.getMunicipalityName(municipalityIndex));\n  }\n\n  showMunicipalityTooltip = (municipalityIndex, event) => {\n    this.fadeInTooltip();\n\n    const { x, y } = this.getMunicipalityCenter(municipalityIndex);\n    const text = this.getMunicipalityName(municipalityIndex);\n\n    this.positionTooltip(text, x, y);\n\n    // Propagate event\n    const { onMouseOver } = this.props;\n    onMouseOver(event, this.getMunicipalityName(municipalityIndex));\n\n    console.log(\"Show Tooltip : \" + this.getMunicipalityName(municipalityIndex));\n  }\n\n  hideMunicipalityTooltip = (municipalityIndex, event) => {\n    this.hideTooltip(event);\n    console.log(\"Hide Tooltip : \" + this.getMunicipalityName(municipalityIndex));\n  }\n\n  render() {\n    const { id, width, height } = this.props;\n    return (\n      <div>\n        <svg id={id} width={width} height={height} viewBox={\"0 0 \" + width + \" \" + height} onClick={e => this.handleClick(e)}>\n          <g className=\"counties\">\n            {this.state.counties.map((d, i) => (\n              <path\n                id={this.makeId(\"county\", i)}\n                key={`county-${i}`}\n                d={geoPath().projection(this.projection())(d)}\n                className=\"county\"\n                onClick={e => this.handleCountyClick(i, e)}\n                onMouseOver={e => this.showCountyTooltip(i, e)}\n                onMouseOut={e => this.hideCountyTooltip(i, e)}\n              />\n            ))}\n          </g>\n          <g className=\"municipalities\">\n            {this.state.municipalities.map((d, i) => (\n              <path\n                id={this.makeId(\"municipality\", i)}\n                key={`municipality-${i}`}\n                d={geoPath().projection(this.projection())(d)}\n                className=\"municipality\"\n                onClick={e => this.handleMunicipalityClick(i, e)}\n                onMouseOver={e => this.showMunicipalityTooltip(i, e)}\n                onMouseOut={e => this.hideMunicipalityTooltip(i, e)}\n              />\n            ))}\n          </g>\n        </svg>\n        <div className=\"tooltip\" />\n      </div>\n    );\n  }\n}\n\nexport default Norway;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport * as d3 from \"d3\";\nimport Norway from \"./Norway\";\n\nclass ElectionTypes extends React.Component {\n  state = {\n    election_types: []\n  };\n\n  handleError(res, message) {\n    console.log(\"ERROR (\" + res.status + \"): \" + message);\n  }\n\n  getElectionTypes() {\n    fetch(\"https://sleepy-retreat-45150.herokuapp.com/api/election_types\")\n      .then(response => {\n        if (!response.ok) {\n          this.handleError(response, \"Failed to get election types\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ election_types: data.election_types });\n      });\n  }\n\n  componentDidMount() {\n    this.getElectionTypes();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.election_types.map(function(item) {\n          return <li key={item.id}>{item.name}</li>;\n        })}\n      </ul>\n    );\n  }\n}\n\nclass ElectionEvents extends React.Component {\n  state = {\n    election_events: []\n  };\n\n  handleError(res, message) {\n    console.log(\"ERROR (\" + res.status + \"): \" + message);\n  }\n\n  getElectionEvents() {\n    fetch(\"https://sleepy-retreat-45150.herokuapp.com/api/election_events\")\n      .then(response => {\n        if (!response.ok) {\n          this.handleError(response, \"Failed to get election events\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ election_events: data.election_events });\n      });\n  }\n\n  componentDidMount() {\n    this.getElectionEvents();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.election_events.map(function(item) {\n          return <li key={item.id}>{item.name}</li>;\n        })}\n      </ul>\n    );\n  }\n}\n\nclass Elections extends React.Component {\n  state = {\n    elections: []\n  };\n\n  handleError(res, message) {\n    console.log(\"ERROR (\" + res.status + \"): \" + message);\n  }\n\n  getElections() {\n    fetch(\"https://sleepy-retreat-45150.herokuapp.com/api/elections\")\n      .then(response => {\n        if (!response.ok) {\n          this.handleError(response, \"Failed to get elections\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ elections: data.elections });\n      });\n  }\n\n  componentDidMount() {\n    this.getElections();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.elections.map(function(item) {\n          return (\n            <li key={item.id}>\n              {item.election_event} {item.election_type}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nclass BarChart extends React.Component {\n  componentDidMount() {\n    this.svg = ReactDOM.findDOMNode(this);\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    const { width, height } = this.props;\n    if (width !== 0 && height !== 0) {\n      this.drawChart();\n    }\n  }\n\n  drawChart() {\n    const { data, height } = this.props;\n\n    this.svg.innerHTML = \"\";\n\n    const svg = d3.select(this.svg);\n\n    svg\n      .selectAll(\"rect\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (d, i) => i * 90) // space between columns\n      .attr(\"y\", (d, i) => height - 10 * d)\n      .attr(\"width\", 65)\n      .attr(\"height\", (d, i) => d * 10)\n      .attr(\"fill\", \"gray\");\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return <svg width={width} height={height} />;\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    data: [12, 5, 6, 6, 9, 10],\n    map_data: [12, 5, 6, 6, 9, 10],\n    width: 700,\n    height: 200,\n    map_width: 800,\n    map_height: 450\n  };\n\n  handleClick = (e, countyNumber, sectionName) => {\n    console.log(\"Click happened :\", countyNumber, sectionName);\n  };\n\n  handleMouseOver = (e, text) => {\n    console.log(\"MouseOver happened :\", text);\n  };\n\n  handleMouseOut = e => {\n    console.log(\"MouseOut happened\");\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Election Results for 2019</p>\n          <Norway\n            id=\"simple\"\n            width={2 * this.state.map_width}\n            height={2 * this.state.map_height}\n            onClick={this.handleClick}\n            onMouseOver={this.handleMouseOver}\n            onMouseOut={this.handleMouseOut}\n          />\n          <BarChart data={this.state.data} width={this.state.width} height={this.state.height} />\n          <ElectionTypes />\n          <ElectionEvents />\n          <Elections />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}