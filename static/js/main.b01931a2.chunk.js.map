{"version":3,"sources":["Norway.js","App.js","serviceWorker.js","index.js"],"names":["Norway","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCountyClick","countyIndex","event","setClickHandled","was_selected","isCountySelected","deselectAllCounties","selection","getCounty","selectCounty","_this$getBoundingBox","getBoundingBox","x","y","width","height","zoomIn","makeViewBoxString","onClick","props","countyName","getCountyName","countyNumber","getCountyNumber","municipalityName","municipalityNumber","handleClick","isClickHandled","resetClickHandled","zoomOut","showCountyTooltip","fadeInTooltip","_this$getCountyCenter","getCountyCenter","text","positionTooltip","onMouseOver","hideCountyTooltip","hideTooltip","console","log","handleMunicipalityClick","municipalityIndex","getMunicipalityCountyNumber","getCountyIndexFromCountyNumber","error","getMunicipalityName","getMunicipalityNumber","showMunicipalityTooltip","_this$getMunicipality","getMunicipalityCenter","hideMunicipalityTooltip","state","countiesCollection","municipalitiesCollection","counties","municipalities","_this$props","geoMercator","fitSize","bbox","node","getBBox","join","properties","ID_1","NAME_1","classed","key","makeId","d3","d","i","nodes","id","view","svg","getSVG","attr","selectAll","style","_this$props2","setState","feature","objects","NOR_adm1","NOR_adm2","features","kind","enumerator","box","point","getBoundingBoxCenter","parentRect","ReactDOM","findDOMNode","getBoundingClientRect","scrollTop","document","documentElement","body","scrollLeft","getCenter","transition","duration","html","onMouseOut","getMunicipality","ID_2","NAME_2","filter","c","_this2","_this$props3","react_default","a","createElement","viewBox","e","className","map","concat","geoPath","projection","React","Component","ElectionTypes","election_types","res","message","status","fetch","then","response","ok","handleError","json","data","getElectionTypes","item","name","ElectionEvents","election_events","_this4","getElectionEvents","Elections","elections","_this6","getElections","election_event","election_type","BarChart","drawChart","innerHTML","enter","append","App","map_data","map_width","map_height","result","handleMouseOver","handleMouseOut","src_Norway","App_BarChart","App_ElectionTypes","App_ElectionEvents","App_Elections","Boolean","window","location","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b01931a2.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as d3 from \"d3\";\nimport { geoMercator, geoPath } from \"d3-geo\";\nimport { feature } from \"topojson-client\";\nimport counties from \"./json/norway-counties.json\";\nimport municipalities from \"./json/norway-municipalities.json\";\n\nclass Norway extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      countiesCollection: [],\n      municipalitiesCollection: [],\n      counties: [],\n      municipalities: []\n    };\n  }\n\n  projection() {\n    const { width, height } = this.props;\n    return geoMercator().fitSize([width, height], this.state.countiesCollection);\n  }\n\n  getBoundingBoxCenter(bbox) {\n    return [bbox.x + bbox.width / 2, bbox.y + bbox.height / 2];\n  }\n\n  getBoundingBox(selection) {\n    const element = selection.node();\n    return element.getBBox();\n  }\n\n  makeViewBoxString(x, y, width, height) {\n    return [x, y, width, height].join(\" \");\n  }\n\n  getCountyNumber(countyIndex) {\n    return this.state.counties[countyIndex].properties.ID_1;\n  }\n\n  getCountyName(countyIndex) {\n    return this.state.counties[countyIndex].properties.NAME_1;\n  }\n\n  isCountySelected(countyIndex) {\n    const selection = this.getCounty(countyIndex);\n    return selection.classed(\"active\");\n  }\n\n  getCounty(countyIndex) {\n    const key = \"#\" + this.makeId(\"county\", countyIndex);\n    return d3.select(key);\n  }\n\n  selectCounty(selection) {\n    selection.classed(\"active\", true);\n  }\n\n  handleCountyClick = (countyIndex, event) => {\n    this.setClickHandled();\n\n    const was_selected = this.isCountySelected(countyIndex);\n    this.deselectAllCounties();\n\n    if (!was_selected) {\n      const selection = this.getCounty(countyIndex);\n      this.selectCounty(selection);\n      const { x, y, width, height } = this.getBoundingBox(selection);\n      this.zoomIn(this.makeViewBoxString(x, y, width, height));\n    }\n\n    const { onClick } = this.props;\n    onClick(event, {\n      countyName: this.getCountyName(countyIndex),\n      countyNumber: this.getCountyNumber(countyIndex),\n      municipalityName: \"\",\n      municipalityNumber: \"\"\n    });\n  };\n\n  deselectAllCounties() {\n    d3.selectAll(\"path\").classed(\"active\", (d, i, nodes) => {\n      const node = d3.select(nodes[i]);\n      node.classed(\"active\", false);\n    });\n  }\n\n  getSVG() {\n    return d3.select(\"#\" + this.props.id);\n  }\n\n  zoomIn(view) {\n    const svg = this.getSVG();\n    svg.classed(\"county_zoomed\", true);\n    svg.attr(\"viewBox\", view);\n    svg.selectAll(\".municipality\").style(\"pointer-events\", \"all\");\n    svg.selectAll(\".county\").style(\"pointer-events\", \"none\");\n\n    svg.selectAll(\".municipality\").classed(\"county_zoomed\", true);\n    svg.selectAll(\".county\").classed(\"county_zoomed\", true);\n  }\n\n  zoomOut() {\n    const { width, height } = this.props;\n    let view = this.makeViewBoxString(0, 0, width, height);\n    const svg = this.getSVG();\n    svg.classed(\"county_zoomed\", false);\n    svg.attr(\"viewBox\", view);\n    svg.selectAll(\".municipality\").style(\"pointer-events\", \"none\");\n    svg.selectAll(\".county\").style(\"pointer-events\", \"all\");\n\n    svg.selectAll(\".municipality\").classed(\"county_zoomed\", false);\n    svg.selectAll(\".county\").classed(\"county_zoomed\", false);\n  }\n\n  setClickHandled() {\n    this.getSVG().classed(\"clicked\", true);\n  }\n\n  resetClickHandled() {\n    this.getSVG().classed(\"clicked\", false);\n  }\n\n  isClickHandled() {\n    return this.getSVG().classed(\"clicked\");\n  }\n\n  componentDidMount() {\n    this.setState({\n      countiesCollection: feature(counties, counties.objects.NOR_adm1),\n      municipalitiesCollection: feature(municipalities, municipalities.objects.NOR_adm2),\n      counties: feature(counties, counties.objects.NOR_adm1).features,\n      municipalities: feature(municipalities, municipalities.objects.NOR_adm2).features\n    });\n  }\n\n  makeId(kind, enumerator) {\n    const { id } = this.props;\n    return \"\" + id + \"-\" + kind + \"-\" + enumerator;\n  }\n\n  handleClick = event => {\n    if (this.isClickHandled()) {\n      this.resetClickHandled();\n    } else {\n      this.deselectAllCounties();\n      this.zoomOut();\n    }\n  };\n\n  getCenter(selection) {\n    const box = this.getBoundingBox(selection);\n    const point = this.getBoundingBoxCenter(box);\n\n    const parentRect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n\n    var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n    var scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n\n    return {\n      x: parentRect.x + point[0] + scrollLeft,\n      y: parentRect.y + point[1] + scrollTop\n    };\n  }\n\n  getCountyCenter(countyIndex) {\n    const selection = this.getCounty(countyIndex);\n    return this.getCenter(selection);\n  }\n\n  fadeInTooltip() {\n    d3.select(\".tooltip\")\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 0.9);\n  }\n\n  positionTooltip(text, x, y) {\n    d3.select(\".tooltip\")\n      .html(text)\n      .style(\"left\", x + \"px\")\n      .style(\"top\", y + \"px\");\n  }\n\n  showCountyTooltip = (countyIndex, event) => {\n    this.fadeInTooltip();\n\n    const { x, y } = this.getCountyCenter(countyIndex);\n    const text = this.getCountyName(countyIndex);\n\n    this.positionTooltip(text, x, y);\n\n    // Propagate event\n    const { onMouseOver } = this.props;\n    onMouseOver(event, this.getCountyName(countyIndex));\n  };\n\n  hideTooltip(event) {\n    d3.select(\".tooltip\")\n      .transition()\n      .duration(500)\n      .style(\"opacity\", 0);\n    // Propagate event\n    const { onMouseOut } = this.props;\n    onMouseOut(event);\n  }\n\n  hideCountyTooltip = (countyIndex, event) => {\n    this.hideTooltip(event);\n    console.log(\"Hide Tooltip : \" + this.getCountyName(countyIndex));\n  };\n\n  /**\n   *  Municipality\n   */\n  getMunicipalityCenter(municipalityIndex) {\n    const selection = this.getMunicipality(municipalityIndex);\n    return this.getCenter(selection);\n  }\n\n  getMunicipality(municipalityIndex) {\n    const key = \"#\" + this.makeId(\"municipality\", municipalityIndex);\n    return d3.select(key);\n  }\n\n  getMunicipalityCountyNumber(municipalityIndex) {\n    return this.state.municipalities[municipalityIndex].properties.ID_1;\n  }\n\n  getMunicipalityNumber(municipalityIndex) {\n    return this.state.municipalities[municipalityIndex].properties.ID_2;\n  }\n\n  getMunicipalityName(municipalityIndex) {\n    return this.state.municipalities[municipalityIndex].properties.NAME_2;\n  }\n\n  getCountyIndexFromCountyNumber(countyNumber) {\n    let countyIndex = -1;\n    this.state.counties.filter((c, i) => {\n      if (c.properties.ID_1 === countyNumber) {\n        countyIndex = i;\n        return true;\n      }\n      return false;\n    });\n    return countyIndex;\n  }\n\n  handleMunicipalityClick = (municipalityIndex, event) => {\n    const countyNumber = this.getMunicipalityCountyNumber(municipalityIndex);\n    const countyIndex = this.getCountyIndexFromCountyNumber(countyNumber);\n    \n    if (countyIndex < 0) {\n      // Do not mark click as handled, let it propagate, we have nothing sensible to do here\n      console.error(\"ERROR: No such county Found : \", this.getMunicipalityCountyNumber(municipalityIndex));\n      return;\n    }\n\n    if (this.isCountySelected(countyIndex)) {\n      this.setClickHandled();\n      const { onClick } = this.props;\n      onClick(event, {\n        countyName: this.getCountyName(countyIndex),\n        countyNumber: this.getCountyNumber(countyIndex),\n        municipalityName: this.getMunicipalityName(municipalityIndex),\n        municipalityNumber: this.getMunicipalityNumber(municipalityIndex)\n      });\n    } else {\n      this.handleCountyClick(countyIndex, event);\n    }\n  };\n\n  showMunicipalityTooltip = (municipalityIndex, event) => {\n    this.fadeInTooltip();\n\n    const { x, y } = this.getMunicipalityCenter(municipalityIndex);\n    const text = this.getMunicipalityName(municipalityIndex);\n\n    this.positionTooltip(text, x, y);\n\n    // Propagate event\n    const { onMouseOver } = this.props;\n    onMouseOver(event, this.getMunicipalityName(municipalityIndex));\n\n    console.log(\"Show Tooltip : \" + this.getMunicipalityName(municipalityIndex));\n  };\n\n  hideMunicipalityTooltip = (municipalityIndex, event) => {\n    this.hideTooltip(event);\n    console.log(\"Hide Tooltip : \" + this.getMunicipalityName(municipalityIndex));\n  };\n\n  render() {\n    const { id, width, height } = this.props;\n    return (\n      <div>\n        <svg id={id} width={width} height={height} viewBox={\"0 0 \" + width + \" \" + height} onClick={e => this.handleClick(e)}>\n          <g className=\"counties\">\n            {this.state.counties.map((d, i) => (\n              <path\n                id={this.makeId(\"county\", i)}\n                key={`county-${i}`}\n                d={geoPath().projection(this.projection())(d)}\n                className=\"county\"\n                onClick={e => this.handleCountyClick(i, e)}\n                onMouseOver={e => this.showCountyTooltip(i, e)}\n                onMouseOut={e => this.hideCountyTooltip(i, e)}\n              />\n            ))}\n          </g>\n          <g className=\"municipalities\">\n            {this.state.municipalities.map((d, i) => (\n              <path\n                id={this.makeId(\"municipality\", i)}\n                key={`municipality-${i}`}\n                d={geoPath().projection(this.projection())(d)}\n                className=\"municipality\"\n                onClick={e => this.handleMunicipalityClick(i, e)}\n                onMouseOver={e => this.showMunicipalityTooltip(i, e)}\n                onMouseOut={e => this.hideMunicipalityTooltip(i, e)}\n              />\n            ))}\n          </g>\n        </svg>\n        <div className=\"tooltip\" />\n      </div>\n    );\n  }\n}\n\nexport default Norway;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport * as d3 from \"d3\";\nimport Norway from \"./Norway\";\n\nclass ElectionTypes extends React.Component {\n  state = {\n    election_types: []\n  };\n\n  handleError(res, message) {\n    console.log(\"ERROR (\" + res.status + \"): \" + message);\n  }\n\n  getElectionTypes() {\n    fetch(\"https://sleepy-retreat-45150.herokuapp.com/api/election_types\")\n      .then(response => {\n        if (!response.ok) {\n          this.handleError(response, \"Failed to get election types\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ election_types: data.election_types });\n      });\n  }\n\n  componentDidMount() {\n    this.getElectionTypes();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.election_types.map(function(item) {\n          return <li key={item.id}>{item.name}</li>;\n        })}\n      </ul>\n    );\n  }\n}\n\nclass ElectionEvents extends React.Component {\n  state = {\n    election_events: []\n  };\n\n  handleError(res, message) {\n    console.log(\"ERROR (\" + res.status + \"): \" + message);\n  }\n\n  getElectionEvents() {\n    fetch(\"https://sleepy-retreat-45150.herokuapp.com/api/election_events\")\n      .then(response => {\n        if (!response.ok) {\n          this.handleError(response, \"Failed to get election events\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ election_events: data.election_events });\n      });\n  }\n\n  componentDidMount() {\n    this.getElectionEvents();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.election_events.map(function(item) {\n          return <li key={item.id}>{item.name}</li>;\n        })}\n      </ul>\n    );\n  }\n}\n\nclass Elections extends React.Component {\n  state = {\n    elections: []\n  };\n\n  handleError(res, message) {\n    console.log(\"ERROR (\" + res.status + \"): \" + message);\n  }\n\n  getElections() {\n    fetch(\"https://sleepy-retreat-45150.herokuapp.com/api/elections\")\n      .then(response => {\n        if (!response.ok) {\n          this.handleError(response, \"Failed to get elections\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ elections: data.elections });\n      });\n  }\n\n  componentDidMount() {\n    this.getElections();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.elections.map(function(item) {\n          return (\n            <li key={item.id}>\n              {item.election_event} {item.election_type}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nclass BarChart extends React.Component {\n  componentDidMount() {\n    this.svg = ReactDOM.findDOMNode(this);\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    const { width, height } = this.props;\n    if (width !== 0 && height !== 0) {\n      this.drawChart();\n    }\n  }\n\n  drawChart() {\n    const { data, height } = this.props;\n\n    this.svg.innerHTML = \"\";\n\n    const svg = d3.select(this.svg);\n\n    svg\n      .selectAll(\"rect\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (d, i) => i * 90) // space between columns\n      .attr(\"y\", (d, i) => height - 10 * d)\n      .attr(\"width\", 65)\n      .attr(\"height\", (d, i) => d * 10)\n      .attr(\"fill\", \"gray\");\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return <svg width={width} height={height} />;\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    data: [12, 5, 6, 6, 9, 10],\n    map_data: [12, 5, 6, 6, 9, 10],\n    width: 700,\n    height: 200,\n    map_width: 800,\n    map_height: 450\n  };\n\n  handleClick = (e, result) => {\n    const { countyName, countyNumber, municipalityName, municipalityNumber } = result;\n    if (municipalityName) {\n      console.log(\"Click happened : \" + countyName + \" (\" + countyNumber + \"), \" + municipalityName + \" (\" + municipalityNumber + \")\");\n    } else {\n      console.log(\"Click happened : \" + countyName + \" (\" + countyNumber + \")\");\n    }\n  };\n\n  handleMouseOver = (e, text) => {\n    console.log(\"MouseOver happened :\", text);\n  };\n\n  handleMouseOut = e => {\n    console.log(\"MouseOut happened\");\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Election Results for 2019</p>\n          <Norway\n            id=\"simple\"\n            width={2 * this.state.map_width}\n            height={2 * this.state.map_height}\n            onClick={this.handleClick}\n            onMouseOver={this.handleMouseOver}\n            onMouseOut={this.handleMouseOut}\n          />\n          <BarChart data={this.state.data} width={this.state.width} height={this.state.height} />\n          <ElectionTypes />\n          <ElectionEvents />\n          <Elections />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}