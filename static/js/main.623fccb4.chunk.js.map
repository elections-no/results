{"version":3,"sources":["Norway.js","App.js","serviceWorker.js","index.js"],"names":["Norway","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCountyClick","countyIndex","event","setClickHandled","was_selected","isCountySelected","deselectAllCounties","selection","getCounty","selectCounty","_this$getBoundingBox","getBoundingBox","x","y","width","height","zoomIn","makeViewBoxString","onClick","props","countyName","getCountyName","countyNumber","getCountyNumber","municipalityName","municipalityNumber","handleClick","isClickHandled","resetClickHandled","zoomOut","showCountyTooltip","fadeInTooltip","_this$getCountyCenter","getCountyCenter","text","positionTooltip","onMouseOver","hideCountyTooltip","hideTooltip","console","log","handleMunicipalityClick","municipalityIndex","getMunicipalityCountyNumber","getCountyIndexFromCountyNumber","error","getMunicipalityName","getMunicipalityNumber","showMunicipalityTooltip","_this$getMunicipality","getMunicipalityCenter","hideMunicipalityTooltip","handlePollingStationClick","index","state","polling_districts","properties","valgkretsnavn","counties","countiesCollection","municipalities","municipalitiesCollection","pollingDistrictsCollection","_this$props","geoMercator","fitSize","_this$props2","_this$props3","geoIdentity","reflectY","bbox","node","getBBox","join","ID_1","NAME_1","classed","key","makeId","d3","d","i","nodes","id","view","svg","getSVG","attr","selectAll","style","_this$props4","setState","feature","objects","NOR_adm1","features","NOR_adm2","feature6","kind","enumerator","box","point","getBoundingBoxCenter","parentRect","ReactDOM","findDOMNode","getBoundingClientRect","scrollTop","document","documentElement","body","scrollLeft","getCenter","transition","duration","html","onMouseOut","getMunicipality","ID_2","NAME_2","filter","c","_this2","_this$props5","react_default","a","createElement","viewBox","e","className","map","concat","geoPath","projection","onDoubleClick","React","Component","BarChart","drawChart","_this7","data","max","Math","apply","toConsumableArray","innerHTML","enter","append","makeHeight","App","map_width","map_height","result","handleMouseOver","handleMouseOut","src_Norway","App_BarChart","Boolean","window","location","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.623fccb4.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as d3 from \"d3\";\nimport { geoIdentity, geoMercator, geoPath } from \"d3-geo\";\nimport { feature } from \"topojson-client\";\nimport counties from \"./json/norway-counties.json\";\nimport municipalities from \"./json/norway-municipalities.json\";\nimport polling_districts from \"./json/norway-polling-districts.json\";\n\nclass Norway extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      counties: [],\n      countiesCollection: [],\n      municipalities: [],\n      municipalitiesCollection: [],\n      polling_districts: [],\n      pollingDistrictsCollection: []\n    };\n  }\n\n  projection() {\n    const { width, height } = this.props;\n    return geoMercator().fitSize([width, height], this.state.countiesCollection);\n  }\n  \n  municipality_projection() {\n    const { width, height } = this.props;\n    return geoMercator().fitSize([width, height], this.state.municipalitiesCollection);\n  }\n\n  polling_projection() {\n    const { width, height } = this.props;\n    return geoIdentity().reflectY(true).fitSize([width,height],this.state.pollingDistrictsCollection);\n  }\n\n  getBoundingBoxCenter(bbox) {\n    return [bbox.x + bbox.width / 2, bbox.y + bbox.height / 2];\n  }\n\n  getBoundingBox(selection) {\n    const element = selection.node();\n    return element.getBBox();\n  }\n\n  makeViewBoxString(x, y, width, height) {\n    return [x, y, width, height].join(\" \");\n  }\n\n  getCountyNumber(countyIndex) {\n    return this.state.counties[countyIndex].properties.ID_1;\n  }\n\n  getCountyName(countyIndex) {\n    return this.state.counties[countyIndex].properties.NAME_1;\n  }\n\n  isCountySelected(countyIndex) {\n    const selection = this.getCounty(countyIndex);\n    return selection.classed(\"active\");\n  }\n\n  getCounty(countyIndex) {\n    const key = \"#\" + this.makeId(\"county\", countyIndex);\n    return d3.select(key);\n  }\n\n  selectCounty(selection) {\n    selection.classed(\"active\", true);\n  }\n\n  handleCountyClick = (countyIndex, event) => {\n    this.setClickHandled();\n\n    const was_selected = this.isCountySelected(countyIndex);\n    this.deselectAllCounties();\n\n    if (!was_selected) {\n      const selection = this.getCounty(countyIndex);\n      this.selectCounty(selection);\n      const { x, y, width, height } = this.getBoundingBox(selection);\n      this.zoomIn(this.makeViewBoxString(x, y, width, height));\n    }\n\n    const { onClick } = this.props;\n    onClick(event, {\n      countyName: this.getCountyName(countyIndex),\n      countyNumber: this.getCountyNumber(countyIndex),\n      municipalityName: \"\",\n      municipalityNumber: \"\"\n    });\n  };\n\n  deselectAllCounties() {\n    d3.selectAll(\"path\").classed(\"active\", (d, i, nodes) => {\n      const node = d3.select(nodes[i]);\n      node.classed(\"active\", false);\n    });\n  }\n\n  getSVG() {\n    return d3.select(\"#\" + this.props.id);\n  }\n\n  zoomIn(view) {\n    const svg = this.getSVG();\n    svg.classed(\"county_zoomed\", true);\n    svg.attr(\"viewBox\", view);\n    svg.selectAll(\".municipality\").style(\"pointer-events\", \"all\");\n    svg.selectAll(\".county\").style(\"pointer-events\", \"none\");\n\n    svg.selectAll(\".municipality\").classed(\"county_zoomed\", true);\n    svg.selectAll(\".county\").classed(\"county_zoomed\", true);\n  }\n\n  zoomOut() {\n    const { width, height } = this.props;\n    let view = this.makeViewBoxString(0, 0, width, height);\n    const svg = this.getSVG();\n    svg.classed(\"county_zoomed\", false);\n    svg.attr(\"viewBox\", view);\n    svg.selectAll(\".municipality\").style(\"pointer-events\", \"none\");\n    svg.selectAll(\".county\").style(\"pointer-events\", \"all\");\n\n    svg.selectAll(\".municipality\").classed(\"county_zoomed\", false);\n    svg.selectAll(\".county\").classed(\"county_zoomed\", false);\n  }\n\n  setClickHandled() {\n    this.getSVG().classed(\"clicked\", true);\n  }\n\n  resetClickHandled() {\n    this.getSVG().classed(\"clicked\", false);\n  }\n\n  isClickHandled() {\n    return this.getSVG().classed(\"clicked\");\n  }\n\n  componentDidMount() {\n    this.setState({\n      countiesCollection: feature(counties, counties.objects.NOR_adm1),\n      counties: feature(counties, counties.objects.NOR_adm1).features,\n      municipalitiesCollection: feature(municipalities, municipalities.objects.NOR_adm2),\n      municipalities: feature(municipalities, municipalities.objects.NOR_adm2).features,\n      pollingDistrictsCollection: feature(polling_districts, polling_districts.objects.feature6),\n      polling_districts: feature(polling_districts, polling_districts.objects.feature6).features\n    });\n  }\n\n  makeId(kind, enumerator) {\n    const { id } = this.props;\n    return \"\" + id + \"-\" + kind + \"-\" + enumerator;\n  }\n\n  handleClick = event => {\n    if (this.isClickHandled()) {\n      this.resetClickHandled();\n    } else {\n      this.deselectAllCounties();\n      this.zoomOut();\n    }\n  };\n\n  getCenter(selection) {\n    const box = this.getBoundingBox(selection);\n    const point = this.getBoundingBoxCenter(box);\n\n    const parentRect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n\n    var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n    var scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n\n    return {\n      x: parentRect.x + point[0] + scrollLeft,\n      y: parentRect.y + point[1] + scrollTop\n    };\n  }\n\n  getCountyCenter(countyIndex) {\n    const selection = this.getCounty(countyIndex);\n    return this.getCenter(selection);\n  }\n\n  fadeInTooltip() {\n    d3.select(\".tooltip\")\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 0.9);\n  }\n\n  positionTooltip(text, x, y) {\n    d3.select(\".tooltip\")\n      .html(text)\n      .style(\"left\", x + \"px\")\n      .style(\"top\", y + \"px\");\n  }\n\n  showCountyTooltip = (countyIndex, event) => {\n    this.fadeInTooltip();\n\n    const { x, y } = this.getCountyCenter(countyIndex);\n    const text = this.getCountyName(countyIndex);\n\n    this.positionTooltip(text, x, y);\n\n    // Propagate event\n    const { onMouseOver } = this.props;\n    onMouseOver(event, this.getCountyName(countyIndex));\n  };\n\n  hideTooltip(event) {\n    d3.select(\".tooltip\")\n      .transition()\n      .duration(500)\n      .style(\"opacity\", 0);\n    // Propagate event\n    const { onMouseOut } = this.props;\n    onMouseOut(event);\n  }\n\n  hideCountyTooltip = (countyIndex, event) => {\n    this.hideTooltip(event);\n    console.log(\"Hide Tooltip : \" + this.getCountyName(countyIndex));\n  };\n\n  /**\n   *  Municipality\n   */\n  getMunicipalityCenter(municipalityIndex) {\n    const selection = this.getMunicipality(municipalityIndex);\n    return this.getCenter(selection);\n  }\n\n  getMunicipality(municipalityIndex) {\n    const key = \"#\" + this.makeId(\"municipality\", municipalityIndex);\n    return d3.select(key);\n  }\n\n  getMunicipalityCountyNumber(municipalityIndex) {\n    return this.state.municipalities[municipalityIndex].properties.ID_1;\n  }\n\n  getMunicipalityNumber(municipalityIndex) {\n    return this.state.municipalities[municipalityIndex].properties.ID_2;\n  }\n\n  getMunicipalityName(municipalityIndex) {\n    return this.state.municipalities[municipalityIndex].properties.NAME_2;\n  }\n\n  getCountyIndexFromCountyNumber(countyNumber) {\n    let countyIndex = -1;\n    this.state.counties.filter((c, i) => {\n      if (c.properties.ID_1 === countyNumber) {\n        countyIndex = i;\n        return true;\n      }\n      return false;\n    });\n    return countyIndex;\n  }\n\n  handleMunicipalityClick = (municipalityIndex, event) => {\n    const countyNumber = this.getMunicipalityCountyNumber(municipalityIndex);\n    const countyIndex = this.getCountyIndexFromCountyNumber(countyNumber);\n    \n    if (countyIndex < 0) {\n      // Do not mark click as handled, let it propagate, we have nothing sensible to do here\n      console.error(\"ERROR: No such county Found : \", this.getMunicipalityCountyNumber(municipalityIndex));\n      return;\n    }\n\n    if (this.isCountySelected(countyIndex)) {\n      this.setClickHandled();\n      const { onClick } = this.props;\n      onClick(event, {\n        countyName: this.getCountyName(countyIndex),\n        countyNumber: this.getCountyNumber(countyIndex),\n        municipalityName: this.getMunicipalityName(municipalityIndex),\n        municipalityNumber: this.getMunicipalityNumber(municipalityIndex)\n      });\n    } else {\n      this.handleCountyClick(countyIndex, event);\n    }\n  };\n\n  showMunicipalityTooltip = (municipalityIndex, event) => {\n    this.fadeInTooltip();\n\n    const { x, y } = this.getMunicipalityCenter(municipalityIndex);\n    const text = this.getMunicipalityName(municipalityIndex);\n\n    this.positionTooltip(text, x, y);\n\n    // Propagate event\n    const { onMouseOver } = this.props;\n    onMouseOver(event, this.getMunicipalityName(municipalityIndex));\n\n    console.log(\"Show Tooltip : \" + this.getMunicipalityName(municipalityIndex));\n  };\n\n  hideMunicipalityTooltip = (municipalityIndex, event) => {\n    this.hideTooltip(event);\n    console.log(\"Hide Tooltip : \" + this.getMunicipalityName(municipalityIndex));\n  };\n\n  handlePollingStationClick = (index, event) => {\n    console.log(\"handlePollingStationClick\", this.state.polling_districts[index].properties.valgkretsnavn);\n  }\n\n  render() {\n    const { id, width, height } = this.props;\n    return (\n      <div>\n        <svg id={id} width={width} height={height} viewBox={\"0 0 \" + width + \" \" + height} onClick={e => this.handleClick(e)}>\n          <g className=\"counties\">\n            {this.state.counties.map((d, i) => (\n              <path\n                id={this.makeId(\"county\", i)}\n                key={`county-${i}`}\n                d={geoPath().projection(this.projection())(d)}\n                className=\"county\"\n                onDoubleClick={e => this.handleCountyClick(i, e)}\n                onMouseOver={e => this.showCountyTooltip(i, e)}\n                onMouseOut={e => this.hideCountyTooltip(i, e)}\n              />\n            ))}\n          </g>\n          <g className=\"municipalities\">\n            {this.state.municipalities.map((d, i) => (\n              <path\n                id={this.makeId(\"municipality\", i)}\n                key={`municipality-${i}`}\n                d={geoPath().projection(this.projection())(d)}\n                className=\"municipality\"\n                onClick={e => this.handleMunicipalityClick(i, e)}\n                onMouseOver={e => this.showMunicipalityTooltip(i, e)}\n                onMouseOut={e => this.hideMunicipalityTooltip(i, e)}\n              />\n            ))}\n          </g>\n          {/* <g className=\"polling_districts\">\n            {this.state.polling_districts.map((d, i) => (\n              <path\n                id={this.makeId(\"polling_district\", i)}\n                key={`polling_district-${i}`}\n                d={geoPath().projection(this.polling_projection())(d)}\n                className=\"polling_district\"\n                onClick={e => this.handlePollingStationClick(i, e)}\n              />\n            ))}\n          </g> */}\n        </svg>\n        <div className=\"tooltip\" />\n      </div>\n    );\n  }\n}\n\nexport default Norway;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport * as d3 from \"d3\";\nimport Norway from \"./Norway\";\n\nclass ElectionTypes extends React.Component {\n  state = {\n    election_types: []\n  };\n\n  handleError(res, message) {\n    console.log(\"ERROR (\" + res.status + \"): \" + message);\n  }\n\n  getElectionTypes() {\n    fetch(\"https://sleepy-retreat-45150.herokuapp.com/api/election_types\")\n      .then(response => {\n        if (!response.ok) {\n          this.handleError(response, \"Failed to get election types\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ election_types: data.election_types });\n      });\n  }\n\n  componentDidMount() {\n    this.getElectionTypes();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.election_types.map(function(item) {\n          return <li key={item.id}>{item.name}</li>;\n        })}\n      </ul>\n    );\n  }\n}\n\nclass ElectionEvents extends React.Component {\n  state = {\n    election_events: []\n  };\n\n  handleError(res, message) {\n    console.log(\"ERROR (\" + res.status + \"): \" + message);\n  }\n\n  getElectionEvents() {\n    fetch(\"https://sleepy-retreat-45150.herokuapp.com/api/election_events\")\n      .then(response => {\n        if (!response.ok) {\n          this.handleError(response, \"Failed to get election events\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ election_events: data.election_events });\n      });\n  }\n\n  componentDidMount() {\n    this.getElectionEvents();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.election_events.map(function(item) {\n          return <li key={item.id}>{item.name}</li>;\n        })}\n      </ul>\n    );\n  }\n}\n\nclass Elections extends React.Component {\n  state = {\n    elections: []\n  };\n\n  handleError(res, message) {\n    console.log(\"ERROR (\" + res.status + \"): \" + message);\n  }\n\n  getElections() {\n    fetch(\"https://sleepy-retreat-45150.herokuapp.com/api/elections\")\n      .then(response => {\n        if (!response.ok) {\n          this.handleError(response, \"Failed to get elections\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ elections: data.elections });\n      });\n  }\n\n  componentDidMount() {\n    this.getElections();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.elections.map(function(item) {\n          return (\n            <li key={item.id}>\n              {item.election_event} {item.election_type}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nclass BarChart extends React.Component {\n  componentDidMount() {\n    this.svg = ReactDOM.findDOMNode(this);\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    const { width, height } = this.props;\n    if (width !== 0 && height !== 0) {\n      this.drawChart();\n    }\n  }\n\n  drawChart() {\n    const { data, height } = this.props;\n    const max = Math.max(...data);\n\n    this.svg.innerHTML = \"\";\n\n    const svg = d3.select(this.svg);\n\n    svg\n      .selectAll(\"rect\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (d, i) => i * 90) // space between columns\n      .attr(\"y\", (d, i) => height - this.makeHeight(height, max, d))\n      .attr(\"width\", 65)\n      .attr(\"height\", (d, i) => this.makeHeight(height, max, d))\n      .attr(\"fill\", \"gray\");\n  }\n\n  makeHeight(height, max, d) {\n    return (height / max) * d;\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return <svg width={width} height={height} />;\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    data: [550, 273, 138, 54, 80, 195, 326, 600, 124, 3, 0, 5, 2,  3,  2,  5, 2, 1, 7, 1,  24, 0],\n    width: 1500,\n    height: 200,\n    map_width: 800,\n    map_height: 450\n  };\n\n  handleClick = (e, result) => {\n    const { countyName, countyNumber, municipalityName, municipalityNumber } = result;\n    if (municipalityName) {\n      console.log(\"Click happened : \" + countyName + \" (\" + countyNumber + \"), \" + municipalityName + \" (\" + municipalityNumber + \")\");\n    } else {\n      console.log(\"Click happened : \" + countyName + \" (\" + countyNumber + \")\");\n    }\n  };\n\n  handleMouseOver = (e, text) => {\n    console.log(\"MouseOver happened :\", text);\n  };\n\n  handleMouseOut = e => {\n    console.log(\"MouseOut happened\");\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <p>Election Results for 2019</p>\n          <Norway\n            id=\"simple\"\n            width={2 * this.state.map_width}\n            height={2 * this.state.map_height}\n            onClick={this.handleClick}\n            onMouseOver={this.handleMouseOver}\n            onMouseOut={this.handleMouseOut}\n          />\n          <BarChart data={this.state.data} width={this.state.width} height={this.state.height} />\n          {/* <ElectionTypes />\n          <ElectionEvents />\n          <Elections /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}